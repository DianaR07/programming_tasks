using HorizonSideRobots

function edge!(robot)
    while !isborder(robot,Sud)
        move!(robot,Sud)
    end
    while !isborder(robot,West)
        move!(robot,West)
    end
end

inverse(side:: HorizonSide) = HorizonSide((Int(side) + 2) % 4)

function HorizonSideRobots.move!(robot, side, num_steps::Integer)
    for _ in 1:num_steps
        move!(robot, side)
    end
end

function search!(robot)
    edge!(robot)
    side = Ost
    k = 0
    y = 0
    while y != 10
        if (isborder(robot,side)) && (isborder(robot,Nord))
            move!(robot,inverse(side),n)
            move!(robot,Nord)
            y += 1
            move!(robot,side,n)
            side = inverse(side)
            k += 1
        elseif isborder(robot,side)
            side = inverse(side)
            move!(robot,Nord)
            y += 1
        end
        if !isborder(robot,side)
            move!(robot,side)
        end
    end
    return k
end

#чтобы управлять роботом в двумерном пространстве с целью исследовать область, 
#начиная с нижнего левого угла и двигаясь вверх и в стороны. 
#Робот перемещается, пока не столкнется с границей, и использует логику изменения направления для достижения своей цели. 
#В конце функции search! возвращается количество раз, когда робот изменял направление.
